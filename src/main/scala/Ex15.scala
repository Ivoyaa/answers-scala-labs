object Ex15 extends App {
  val myMap: Map[String, String] = Map("1" -> "a", "2" -> "b", "3" -> "с")
  println(myMap.keySet)
  println(myMap.values)
  println(myMap.mapValues(x => x * 2))
  println(myMap.map {
    case (k, v) => (k + k, v + v)
  })
  println(myMap.get("2"))
  println(myMap.get("5"))
  println(myMap + ("4" -> "d"))
}
/*
* myMap - экземпляр иммутабельной коллекции scala.collections.immutable.Map
* Типы ключа и значения - String
* myMap.keySet - метод, определенной на Map - получает множество ключей в ней
* myMap.values - метод, возвращающий коллекцию, содержащую все значения в Map
* mapValues - метод, принимающий в себя функцию, которая применяется ко всем значениям в экземпляре Map
* метод get(key) - возвращает класс Option - Some(v) если такой ключ есть, где v - значение, соответствующее
* ключу key и None, если такого ключа нет
* map - метод, принимающий в себя функцию, которая принимает аргумент - кортеж из двух элементов
* и возвращает кортеж из 2 элементов, таким образом изменяя каждую пару ключ-значение
* метод + в постфиксной нотации добавляет ключ-значение в Map, создавая новый экземпляр Map, так как
* исходная - иммутабельная
*  */

// map можно удалить если покажется оверкиллом
